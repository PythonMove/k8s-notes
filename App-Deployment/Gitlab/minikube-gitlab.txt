Minikube master node on KVM VM with none driver inside.
Memory to 4096MiB.
CPUs to 2.
Disk to 64GB volume.
Network "default".

# Install kubernetes using kubeadm.md guide for master node
# but use kubernetes 1.19.10 version
yum install -y kubelet-1.19.10 kubeadm-1.19.10 kubectl-1.19.10 --disableexcludes=kubernetes

# Set MINIKUBE_HOME=/media/daniel/Data/Dano/gitlab => this location is on different hard drive.
# This is workaround, if you want to deploy minikube instance on different hard drive than that
# of where your system is installed.
export MINIKUBE_HOME=/media/daniel/Data/Dano/gitlab

# Create a minimal minikube master node
sudo minikube start --driver=none --container-runtime=docker --cni=calico --kubernetes-version=1.19.10

# In case calico-node fails, it is most likely failing to get IP address via invalid regex for your net interfaces
kubectl set env daemonset/calico-node -n kube-system IP_AUTODETECTION_METHOD=interface=<regex-to-your-net-iface>

Worker node created directly via KVM, added to minikube cluster.
Memory to 6144MiB.
CPUs to 3.
Disk to 64GB volume.
Network "default".

# Install kubernetes using kubeadm.md guide for worker node,
# but use kubernetes 1.19.10 version
yum install -y kubelet-1.19.10 kubeadm-1.19.10 kubectl-1.19.10 --disableexcludes=kubernetes

# On master node, get kubeadm join command
kubeadm token create --print-join-command

# If kubeadm join command is failing, it may be kubelet having troubles connecting.
# Minikube is storing certificates in different path than kubeadm, copy these
# certificates to worker node and kubelet should be operational again.
(worker node) mkdir /var/lib/minikube
(master node) scp -r /var/lib/minikube/certs root@worker-node:/var/lib/minikube/

# If you need to clear changes by failed kubeadm init/join
kubeadm reset --force

# Enable Ingress addon via Minikube
(master node) minikube addons enable ingress

Mark master node as master only, make worker node do all the job.
kubectl label node worker node-role.kubernetes.io/worker=worker
kubectl taint nodes master Podless:NoSchedule

# Install helm3.
# Deploy gitlab via helm, using gitlab-minimal-values.yaml
helm repo add gitlab https://charts.gitlab.io/
helm repo update
helm upgrade --install gitlab gitlab/gitlab -f minimal-values-minikube.yaml

# Same problems with permissions, attempts:
kubectl get pv -A -oyaml|grep path
# Change owner to these directories
(worker node) chown -R 1001:1001 /tmp/hostpath-provisioner
# Change permissions to these directories
(worker node) chmod 777 -R /tmp/hostpath-provisioner

# Add option to helm install command:
--set volumePermissions.enabled=true
# Add these
--set volumePermissions.securityContext.runAsUser=auto
--set securityContext.enabled=false
--set containerSecurityContext.enabled=false
--set shmVolume.chmod.enabled=false
# Add these if your hardware is slow
--set timeout=15m0s

NAME: gitlab
LAST DEPLOYED: Wed May 26 09:39:41 2021
NAMESPACE: default
STATUS: deployed
REVISION: 1
NOTES:
NOTICE: The resource requests have increased for the Webservice and Sidekiq charts.
    For more information on Webservice resources, see https://docs.gitlab.com/charts/charts/gitlab/webservice/index.html#resources
    For more information on Sidekiq resources, see https://docs.gitlab.com/charts/charts/gitlab/sidekiq/index.html#resource
    Related merge request: https://gitlab.com/gitlab-org/charts/gitlab/-/merge_requests/1634

    To restore the original resource specifications:
    --set gitlab.sidekiq.resources.requests.cpu=50m
    --set gitlab.sidekiq.resources.requests.memory=650M
    --set gitlab.webservice.resources.requests.memory=1.5G



WARNING: Automatic TLS certificate generation with cert-manager is disabled and no TLS certificates were provided. Self-signed certificates were generated.

You may retrieve the CA root for these certificates from the `gitlab-wildcard-tls-ca` secret, via the following command. It can then be imported to a web browser or system store.

    kubectl get secret gitlab-wildcard-tls-ca -ojsonpath='{.data.cfssl_ca}' | base64 --decode > gitlab.192.168.122.133.nip.io.ca.pem

If you do not wish to use self-signed certificates, please set the following properties:
  - global.ingress.tls.secretName
  OR
  - global.ingress.tls.enabled (set to `true`)
  - gitlab.webservice.ingress.tls.secretName
  - registry.ingress.tls.secretName
  - minio.ingress.tls.secretName









Help us improve the installation experience, let us know how we did with a 1 minute survey:
https://gitlab.fra1.qualtrics.com/jfe/form/SV_6kVqZANThUQ1bZb?installation=helm&release=13-12


# After this, sidekiq and webservice should be the only two failing.
kubectl logs -f -n kube-system kube-controller-manager-master

# There should be warnings about HPA (horizontalPodAutoscaller) not able to autoscale because it is not
# getting any metrics. Since we used minikube, it has addon called metrics-server. Enable it.
minikube addons enable metrics-server

# Check logs again
kubectl logs -f -n kube-system kube-controller-manager-master

# Logs should tell you the metrics-server was called but did not return any metrics.
# Try getting some metrics from the server manually. Check if items: [] is not empty.
kubectl get --raw /apis/metrics.k8s.io/v1beta1/namespaces/default/pods


# output from kubectl logs -f gitlab-migrations-1
Begin parsing .erb files from /var/opt/gitlab/templates
Writing /srv/gitlab/config/resque.yml
Writing /srv/gitlab/config/cable.yml
Writing /srv/gitlab/config/database.yml
Writing /srv/gitlab/config/gitlab.yml
Copying other config files found in /var/opt/gitlab/templates
Attempting to run '/scripts/wait-for-deps /scripts/db-migrate' as a main process
Checking database migrations are up-to-date
Performing migrations (this will initialized if needed)

== Seed from /srv/gitlab/db/fixtures/production/001_application_settings.rb
Creating the default ApplicationSetting record.

== Seed from /srv/gitlab/db/fixtures/production/002_admin.rb
Administrator account created:

login:    root
password: 3QRzhcxNaRgY1UNlRYD5qeT0gnVw04my4wQMphaZOoakxlBk0jGtlBLoW94ub05O


== Seed from /srv/gitlab/db/fixtures/production/010_settings.rb
Saved Runner Registration Token
Saved CI JWT signing key

== Seed from /srv/gitlab/db/fixtures/production/998_gitlab_instance_administration_project.rb
Successfully created self monitoring project.

== Seed from /srv/gitlab/db/fixtures/production/999_common_metrics.rb

== Seed from ee/db/fixtures/production/010_license.rb

== Seed from ee/db/fixtures/production/027_plans.rb

OK
Performing custom instance setup
Disabling authorized keys write in the database.
Enabling incremental logging of CI jobs.
Disabling access to disk storage for GitLab Pages
Registering OAuth applications.

# output from kubectl logs -f minio-create-buckets
onnecting to Minio server: http://gitlab-minio-svc.default.svc:9000
mc: <ERROR> Unable to initialize new config from the provided credentials. Get http://gitlab-minio-svc.default.svc:9000/probe-bucket-sign/?location=: dial tcp 10.101.50.134:9000: connect: connection refused
mc: <ERROR> Unable to initialize new config from the provided credentials. Get http://gitlab-minio-svc.default.svc:9000/probe-bucket-sign/?location=: dial tcp 10.101.50.134:9000: connect: connection refused
mc: <ERROR> Unable to initialize new config from the provided credentials. Get http://gitlab-minio-svc.default.svc:9000/probe-bucket-sign/?location=: dial tcp 10.101.50.134:9000: connect: connection refused
Added `myminio` successfully.
Creating bucket 'registry'
Bucket created successfully `myminio/registry`.
Setting policy of bucket 'registry' to 'none'.
Access permission for `myminio/registry` is set to `none`
Creating bucket 'git-lfs'
Bucket created successfully `myminio/git-lfs`.
Setting policy of bucket 'git-lfs' to 'none'.
Access permission for `myminio/git-lfs` is set to `none`
Creating bucket 'runner-cache'
Bucket created successfully `myminio/runner-cache`.
Setting policy of bucket 'runner-cache' to 'none'.
Access permission for `myminio/runner-cache` is set to `none`
Creating bucket 'gitlab-uploads'
Bucket created successfully `myminio/gitlab-uploads`.
Setting policy of bucket 'gitlab-uploads' to 'none'.
Access permission for `myminio/gitlab-uploads` is set to `none`
Creating bucket 'gitlab-artifacts'
Bucket created successfully `myminio/gitlab-artifacts`.
Setting policy of bucket 'gitlab-artifacts' to 'none'.
Access permission for `myminio/gitlab-artifacts` is set to `none`
Creating bucket 'gitlab-backups'
Bucket created successfully `myminio/gitlab-backups`.
Setting policy of bucket 'gitlab-backups' to 'none'.
Access permission for `myminio/gitlab-backups` is set to `none`
Creating bucket 'gitlab-packages'
Bucket created successfully `myminio/gitlab-packages`.
Setting policy of bucket 'gitlab-packages' to 'none'.
Access permission for `myminio/gitlab-packages` is set to `none`
Creating bucket 'tmp'
Bucket created successfully `myminio/tmp`.
Setting policy of bucket 'tmp' to 'none'.
Access permission for `myminio/tmp` is set to `none`
Creating bucket 'gitlab-pseudo'
Bucket created successfully `myminio/gitlab-pseudo`.
Setting policy of bucket 'gitlab-pseudo' to 'none'.
Access permission for `myminio/gitlab-pseudo` is set to `none`
Creating bucket 'gitlab-mr-diffs'
Bucket created successfully `myminio/gitlab-mr-diffs`.
Setting policy of bucket 'gitlab-mr-diffs' to 'none'.
Access permission for `myminio/gitlab-mr-diffs` is set to `none`
Creating bucket 'gitlab-terraform-state'
Bucket created successfully `myminio/gitlab-terraform-state`.
Setting policy of bucket 'gitlab-terraform-state' to 'none'.
Access permission for `myminio/gitlab-terraform-state` is set to `none`
Creating bucket 'gitlab-dependency-proxy'
Bucket created successfully `myminio/gitlab-dependency-proxy`.
Setting policy of bucket 'gitlab-dependency-proxy' to 'none'.
Access permission for `myminio/gitlab-dependency-proxy` is set to `none`
Creating bucket 'gitlab-pages'
Bucket created successfully `myminio/gitlab-pages`.
Setting policy of bucket 'gitlab-pages' to 'none'.
Access permission for `myminio/gitlab-pages` is set to `none`

-----------------------------------------------------------
-----------------------------------------------------------
-----------------------------------------------------------
helm upgrade --install gitlab gitlab/gitlab -f gitlab-minimal-values.yaml --set timeout=15m0s --set global.edition=ce

# Untaint node if gitlab-webservice does not find a fitting node to deploy the webservice
kubectl taint nodes master Podless:NoSchedule-


192.168.122.164	control-plane.minikube.internal
